---
// Efecto de cristales flotantes con hexágonos animados
---

<div id="crystal-background" class="fixed inset-0 pointer-events-none z-0 overflow-hidden">
  <div class="crystal-container">
    <!-- Hexágonos cristalinos -->
    <div class="hexagon-field">
      <div class="hexagon hex-1"></div>
      <div class="hexagon hex-2"></div>
      <div class="hexagon hex-3"></div>
      <div class="hexagon hex-4"></div>
      <div class="hexagon hex-5"></div>
      <div class="hexagon hex-6"></div>
      <div class="hexagon hex-7"></div>
      <div class="hexagon hex-8"></div>
      <div class="hexagon hex-9"></div>
      <div class="hexagon hex-10"></div>
    </div>
    
    <!-- Líneas de conexión animadas -->
    <svg class="connection-lines" viewBox="0 0 1200 800" preserveAspectRatio="none">
      <defs>
        <linearGradient id="lineGradient" x1="0%" y1="0%" x2="100%" y2="100%">
          <stop offset="0%" style="stop-color:rgba(107, 91, 149, 0.8);stop-opacity:1" />
          <stop offset="50%" style="stop-color:rgba(166, 74, 201, 0.6);stop-opacity:1" />
          <stop offset="100%" style="stop-color:rgba(138, 124, 168, 0.4);stop-opacity:1" />
        </linearGradient>
      </defs>
      
      <line x1="10%" y1="20%" x2="90%" y2="80%" stroke="url(#lineGradient)" stroke-width="2" opacity="0.6">
        <animate attributeName="opacity" values="0.2;0.8;0.2" dur="4s" repeatCount="indefinite"/>
      </line>
      <line x1="20%" y1="80%" x2="80%" y2="20%" stroke="url(#lineGradient)" stroke-width="1.5" opacity="0.4">
        <animate attributeName="opacity" values="0.1;0.6;0.1" dur="6s" repeatCount="indefinite"/>
      </line>
      <line x1="50%" y1="10%" x2="50%" y2="90%" stroke="url(#lineGradient)" stroke-width="1" opacity="0.3">
        <animate attributeName="opacity" values="0.1;0.5;0.1" dur="8s" repeatCount="indefinite"/>
      </line>
      <line x1="30%" y1="30%" x2="70%" y2="70%" stroke="url(#lineGradient)" stroke-width="1.5" opacity="0.5">
        <animate attributeName="opacity" values="0.2;0.7;0.2" dur="5s" repeatCount="indefinite"/>
      </line>
    </svg>
    
    <!-- Resplandor de fondo -->
    <div class="crystal-glow"></div>
  </div>
</div>

<style>
  .crystal-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
  }

  .hexagon-field {
    position: absolute;
    width: 100%;
    height: 100%;
  }

  .hexagon {
    position: absolute;
    width: 40px;
    height: 35px;
    background: linear-gradient(45deg, 
      rgba(107, 91, 149, 0.6), 
      rgba(166, 74, 201, 0.4), 
      rgba(138, 124, 168, 0.5));
    border-radius: 6px;
    opacity: 0.7;
    animation: float-crystal 15s infinite linear;
    box-shadow: 
      0 0 20px rgba(107, 91, 149, 0.3),
      inset 0 0 10px rgba(255, 255, 255, 0.1);
    transform: rotate(45deg);
  }

  .hexagon::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 60%;
    height: 60%;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 3px;
    transform: translate(-50%, -50%);
  }

  /* Posiciones específicas para cada hexágono */
  .hex-1 { top: 10%; left: 15%; animation-delay: 0s; }
  .hex-2 { top: 20%; left: 75%; animation-delay: -2s; }
  .hex-3 { top: 40%; left: 25%; animation-delay: -4s; }
  .hex-4 { top: 60%; left: 80%; animation-delay: -6s; }
  .hex-5 { top: 75%; left: 35%; animation-delay: -8s; }
  .hex-6 { top: 30%; left: 90%; animation-delay: -10s; }
  .hex-7 { top: 85%; left: 10%; animation-delay: -12s; }
  .hex-8 { top: 50%; left: 60%; animation-delay: -14s; }
  .hex-9 { top: 15%; left: 45%; animation-delay: -16s; }
  .hex-10 { top: 70%; left: 65%; animation-delay: -18s; }

  .connection-lines {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.8;
  }

  .crystal-glow {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 300px;
    height: 300px;
    background: radial-gradient(circle, 
      rgba(107, 91, 149, 0.1) 0%, 
      rgba(166, 74, 201, 0.05) 50%, 
      transparent 100%);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    animation: pulse-glow 8s ease-in-out infinite;
  }

  @keyframes float-crystal {
    0% {
      transform: rotate(45deg) translateY(0px) scale(1);
      opacity: 0.4;
    }
    25% {
      transform: rotate(90deg) translateY(-20px) scale(1.1);
      opacity: 0.8;
    }
    50% {
      transform: rotate(135deg) translateY(-10px) scale(0.9);
      opacity: 0.6;
    }
    75% {
      transform: rotate(180deg) translateY(-30px) scale(1.2);
      opacity: 0.9;
    }
    100% {
      transform: rotate(225deg) translateY(0px) scale(1);
      opacity: 0.4;
    }
  }

  @keyframes pulse-glow {
    0%, 100% {
      opacity: 0.3;
      transform: translate(-50%, -50%) scale(1);
    }
    50% {
      opacity: 0.6;
      transform: translate(-50%, -50%) scale(1.2);
    }
  }

  /* Responsividad */
  @media (max-width: 768px) {
    .hexagon {
      width: 25px;
      height: 22px;
      opacity: 0.5;
    }
    
    .crystal-glow {
      width: 200px;
      height: 200px;
      opacity: 0.3;
    }
    
    .connection-lines {
      opacity: 0.4;
    }
  }

  /* Respeta preferencias de movimiento reducido */
  @media (prefers-reduced-motion: reduce) {
    .hexagon,
    .crystal-glow {
      animation: none;
    }
    
    .hexagon {
      opacity: 0.3;
    }
  }

  /* Optimización de rendimiento */
  .hexagon {
    will-change: transform, opacity;
    transform: translateZ(0);
    backface-visibility: hidden;
  }

  .crystal-glow {
    will-change: transform, opacity;
    transform: translateZ(0);
    backface-visibility: hidden;
  }
</style>
